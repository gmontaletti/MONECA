% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/analytical_functions.R, R/moneca_fast.R
\name{moneca_fast}
\alias{moneca_fast}
\title{MONECA Fast - Memory-Optimized Mobility Network Clustering Analysis}
\usage{
moneca_fast(
  mx = mx,
  segment.levels = 3,
  cut.off = 1,
  mode = "symmetric",
  delete.upper.tri = TRUE,
  small.cell.reduction = 0,
  use.sparse = FALSE,
  min.density = 0,
  max.clique.size = NULL,
  progress = TRUE,
  auto_tune = FALSE,
  tune_method = "stability",
  tune_verbose = FALSE,
  use_maximal_cliques = FALSE
)

moneca_fast(
  mx = mx,
  segment.levels = 3,
  cut.off = 1,
  mode = "symmetric",
  delete.upper.tri = TRUE,
  small.cell.reduction = 0,
  use.sparse = FALSE,
  min.density = 0,
  max.clique.size = NULL,
  progress = TRUE,
  auto_tune = FALSE,
  tune_method = "stability",
  tune_verbose = FALSE,
  use_maximal_cliques = FALSE
)
}
\arguments{
\item{mx}{A mobility table (square matrix) with row and column totals in the last
row/column. Row names should identify the categories/classes.}

\item{segment.levels}{Integer specifying the number of hierarchical segmentation 
levels to compute. Default is 3.}

\item{cut.off}{Numeric threshold for the minimum relative risk to be considered
a significant tie. Default is 1.}

\item{mode}{Character string specifying edge mode. Currently uses symmetric mode.}

\item{delete.upper.tri}{Logical indicating whether to use only lower triangle. Default is TRUE.}

\item{small.cell.reduction}{Numeric value to handle small cell counts. Default is 0.}

\item{use.sparse}{Logical indicating whether to use sparse matrices for large data. Default is FALSE.}

\item{min.density}{Minimum strength-based density to continue processing.
Calculated as mean(strength)/max(strength). Default is 0 (disabled for algorithmic
fidelity). Set to 0.01 or higher for early stopping optimization on sparse graphs.}

\item{max.clique.size}{Maximum size of cliques to consider (NULL for no limit). Default is NULL.}

\item{progress}{Logical indicating whether to show progress bars. Default is TRUE.}

\item{auto_tune}{Logical indicating whether to automatically tune the 
small.cell.reduction parameter. When TRUE, uses optimization methods to
select the best value. Default is FALSE.}

\item{tune_method}{Character string specifying the auto-tuning method when
auto_tune is TRUE. Options are "stability" (default), "quality", or 
"performance". See \code{\link{auto_tune_small_cell_reduction}} for details.}

\item{tune_verbose}{Logical indicating whether to print verbose messages
during auto-tuning. Default is FALSE.}

\item{use_maximal_cliques}{Logical indicating whether to use maximal cliques
(faster, fewer cliques) instead of all cliques (slower, more complete enumeration).
Default is FALSE (use all cliques for algorithmic correctness). Set to TRUE for
performance optimization on very dense graphs.}
}
\value{
An object of class "moneca" containing:
  \describe{
    \item{segment.list}{A list of segment memberships for each hierarchical level.
      Each element is a list of vectors containing the original row indices.}
    \item{mat.list}{A list of aggregated mobility matrices for each level, where
      rows/columns represent segments instead of original categories.}
    \item{small.cell.reduction}{The small cell reduction parameter used.}
  }

An object of class "moneca" with the same structure as the original moneca() function.
}
\description{
Memory-optimized version of the main function for performing hierarchical clustering 
analysis on mobility tables. MONECA creates weighted networks from mobility data and 
uses cliques to identify discrete and nested clusters of positions with high internal mobility.

An optimized version of the moneca algorithm with improved performance for large datasets.
Implements various performance optimizations including vectorization and early stopping.
}
\details{
This version includes intelligent memory management for dense graphs and optimized
clique enumeration to prevent memory issues with large datasets.


MONECA implements an iterative algorithm that:
\enumerate{
  \item Converts the mobility table to a relative risk matrix
  \item Identifies network cliques based on the threshold
  \item Groups nodes into segments using the clique structure
  \item Aggregates the mobility table by segments
  \item Repeats the process for the specified number of levels
}

The algorithm stops early if no further segmentation is possible (e.g., all
nodes collapse into a single segment).

**Algorithm Features:**
\itemize{
  \item Simple and memory-efficient clique testing using direct subset checking
  \item Intelligent dense graph detection with fallback to maximal cliques
  \item Streamlined implementation based on the original bejler.test approach
  \item Maintains algorithmic correctness while minimizing memory overhead
}

This implementation is optimized for single-core performance using:
\itemize{
  \item Vectorized matrix operations for improved speed
  \item Optional sparse matrix support via \code{use.sparse} parameter
  \item Early stopping via \code{min.density} threshold (disabled by default)
  \item Clique size limiting via \code{max.clique.size} parameter
}

\strong{Produces identical results to} \code{\link{moneca}} and \code{\link{moneca_parallel}}
when using default parameters.

\strong{When to use:}
\itemize{
  \item Single-core systems or laptops
  \item Small to medium datasets (< 50 classes)
  \item When you want explicit control over optimization parameters
}

For multi-core systems with large datasets (> 50 classes), consider using
\code{\link{moneca_parallel}} instead for better performance through parallelization.
}
\examples{
# Generate synthetic mobility data
mobility_data <- generate_mobility_data(n_classes = 6, seed = 42)

# Run moneca analysis (fast version)
seg <- moneca_fast(mobility_data, segment.levels = 3)
print(seg)

# Run with auto-tuning for optimal parameters
seg_tuned <- moneca_fast(mobility_data, segment.levels = 3, 
                         auto_tune = TRUE, tune_method = "stability")
print(seg_tuned)

# Examine segment membership
membership <- segment.membership(seg)
print(membership)

# Visualize with modern plotting
\dontrun{
plot_moneca_ggraph(seg, node_color = "segment", title = "MONECA Clustering")
}

}
\references{
ToubÃ¸l, J., & Larsen, A. G. (2017). Mapping the Social Class Structure: 
From Occupational Mobility to Social Class Categories Using Network Analysis.
Sociology, 51(6), 1257-1276.
}
\seealso{
\code{\link{moneca}} for the standard version with progress bar,
\code{\link{find.segments}} for the core segmentation algorithm,
\code{\link{weight.matrix}} for relative risk calculation,
\code{\link{plot_moneca_ggraph}} for modern visualization,
\code{\link{segment.membership}} for extracting memberships

\code{\link{moneca}} for the original implementation,
  \code{\link{moneca_parallel}} for multi-core parallelization
}
