% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/modern_plotting.R
\name{plot_stair_ggraph}
\alias{plot_stair_ggraph}
\title{Multi-Level Segmentation Visualization (Stair Plot)}
\usage{
plot_stair_ggraph(
  segments,
  levels = seq_along(segments$segment.list),
  layout = NULL,
  ncol = 2,
  segment_naming = "auto",
  include_first_level = TRUE,
  ...
)
}
\arguments{
\item{segments}{A moneca object returned by \code{\link{moneca}}.}

\item{levels}{Integer vector specifying which hierarchical levels to visualize.
Default includes all levels.}

\item{layout}{Layout specification for consistency across plots. Can be:
\itemize{
  \item NULL (default): Use layout.matrix() for consistent positioning
  \item Character string: Layout algorithm name ("fr", "kk", "stress", etc.)
  \item Matrix: Custom coordinate matrix for node positions
}}

\item{ncol}{Integer specifying the number of columns in the plot grid.
Default is 2. Set to 1 for vertical arrangement.}

\item{segment_naming}{Specifies how to name segments across all visualization levels. Can be:
\itemize{
  \item Character string: "auto" (default), "concat", "pattern", or "custom" - 
    these are passed to \code{\link{segment.membership.enhanced}} for automatic naming
  \item data.frame: Custom segment labels with columns "name" (node names from the 
    mobility matrix) and "segment_label" (desired custom labels). This allows complete 
    control over segment naming across all hierarchical levels
  \item NULL: Uses default "auto" strategy
}
When a data.frame is provided, custom labels override automatically generated names
consistently across all levels. The data.frame approach is particularly useful for 
stair plots as it maintains consistent naming across the hierarchical progression.}

\item{include_first_level}{Logical indicating whether to include the first level
(individual classes without segmentation). Default is TRUE.}

\item{...}{Additional arguments passed to \code{\link{plot_moneca_ggraph}}.}
}
\value{
If \code{combine_plots = TRUE}, returns a combined plot grid object.
If \code{combine_plots = FALSE}, returns a list of ggplot objects, one for each level.
}
\description{
Creates a series of network plots showing how segmentation evolves across
hierarchical levels in a moneca analysis. This "stair plot" provides insight
into the progressive clustering of social positions.
}
\details{
The stair plot helps visualize the hierarchical nature of MONECA segmentation
by showing how larger segments at higher levels break down into smaller, more
specific segments at lower levels. This is particularly useful for:
\itemize{
  \item Understanding the segmentation process
  \item Identifying optimal levels of analysis
  \item Presenting results to different audiences
  \item Comparing segmentation stability across levels
}

When using a consistent layout across all plots, the relative positions of
nodes remain the same, making it easier to track how segments evolve.
}
\examples{
# Generate synthetic data and run MONECA
mobility_data <- generate_mobility_data(n_classes = 6, seed = 123)
seg <- moneca(mobility_data, segment.levels = 4)

# Basic stair plot
stair_plots <- plot_stair_ggraph(seg)

# Customized stair plot with specific levels
custom_stair <- plot_stair_ggraph(seg, 
                                 levels = c(2, 3),
                                 layout = "stress",
                                 ncol = 1,
                                 node_color = "mobility")

# Stair plot with custom organizational labels
org_labels <- data.frame(
  name = rownames(mobility_data)[-nrow(mobility_data)],
  segment_label = c("C-Suite", "VP Level", "Director Level", 
                    "Manager Level", "Staff Level", "Entry Level")[1:length(rownames(mobility_data)[-nrow(mobility_data)])],
  stringsAsFactors = FALSE
)

org_stair <- plot_stair_ggraph(seg, 
                              segment_naming = org_labels,
                              ncol = 1,
                              title = "Organizational Hierarchy Evolution")

# Return individual plots for further customization
plot_list <- plot_stair_ggraph(seg, combine_plots = FALSE)
# Modify individual plots
plot_list[[1]] <- plot_list[[1]] + ggplot2::labs(subtitle = "Level 2")

\dontrun{
# Display plots with custom labels
print(org_stair)

# Save individual plots
for (i in seq_along(plot_list)) {
  ggplot2::ggsave(paste0("level_", i, ".png"), plot_list[[i]])
}
}

}
\seealso{
\code{\link{plot_moneca_ggraph}} for single-level visualization,
\code{\link{plot_ego_ggraph}} for ego network analysis,
\code{\link{layout.matrix}} for consistent layouts,
\code{\link{moneca}} for the main analysis function
}
