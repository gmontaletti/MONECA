% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/auto_tuning.R
\name{generate_candidate_values}
\alias{generate_candidate_values}
\title{Generate Data-Driven Candidate Values}
\usage{
generate_candidate_values(
  mx,
  method = "hybrid",
  max_candidates = 20,
  include_zero = TRUE
)
}
\arguments{
\item{mx}{Mobility matrix for analysis.}

\item{method}{Character string specifying generation strategy:
\itemize{
  \item "percentile": Percentile-based thresholds from data distribution
  \item "sparsity": Matrix sparsity-informed selection  
  \item "density": Network density optimization targets
  \item "hybrid": Combination of multiple strategies (default)
}}

\item{max_candidates}{Maximum number of candidates to generate. Default is 20.}

\item{include_zero}{Logical indicating whether to include 0 as a candidate.
Default is TRUE.}
}
\value{
Numeric vector of candidate small.cell.reduction values, sorted 
  in ascending order.
}
\description{
Generates candidate values for small.cell.reduction parameter using 
data-driven approaches including percentile analysis, matrix sparsity 
assessment, and network density optimization.
}
\details{
\strong{Percentile Method:} Generates thresholds based on the distribution 
of non-zero values in the mobility matrix. Uses quantiles from 5% to 95%.

\strong{Sparsity Method:} Analyzes matrix sparsity patterns and generates 
candidates that preserve different levels of network connectivity.

\strong{Density Method:} Targets specific network density levels (0.1, 0.2, etc.)
by estimating required thresholds.

\strong{Hybrid Method:} Combines all approaches and selects diverse, 
non-redundant candidates covering the full parameter space.
}
\examples{
\dontrun{
# Generate sample data
mobility_data <- generate_mobility_data(n_classes = 5, seed = 123)

# Percentile-based candidates
candidates_pct <- generate_candidate_values(mobility_data, "percentile")

# Sparsity-informed candidates  
candidates_sparse <- generate_candidate_values(mobility_data, "sparsity")

# Hybrid approach (recommended)
candidates_hybrid <- generate_candidate_values(mobility_data, "hybrid")

print(candidates_hybrid)
}

}
\seealso{
\code{\link{auto_tune_small_cell_reduction}}
}
