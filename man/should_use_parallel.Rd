% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/smart_parallel_switching.R
\name{should_use_parallel}
\alias{should_use_parallel}
\title{Main Decision Function for Parallel Processing}
\usage{
should_use_parallel(
  n_combinations,
  matrix_size,
  n_bootstrap = 50,
  user_preference = "auto",
  system_resources = NULL,
  verbose = FALSE
)
}
\arguments{
\item{n_combinations}{Number of parameter combinations to evaluate.}

\item{matrix_size}{Size of the mobility matrix (n x n).}

\item{n_bootstrap}{Number of bootstrap samples for stability assessment.}

\item{user_preference}{User's explicit preference: "auto", "parallel", "sequential".}

\item{system_resources}{Pre-computed system resources (optional, will detect if NULL).}

\item{verbose}{Logical indicating whether to display decision reasoning.}
}
\value{
List containing the parallelization decision:
  \item{use_parallel}{Logical indicating whether to use parallel processing}
  \item{n_cores}{Recommended number of cores (if parallel)}
  \item{reasoning}{Text explanation of the decision}
  \item{performance_estimates}{Detailed performance predictions}
  \item{system_info}{System resource information used}
  \item{user_override}{Whether user preference overrode recommendation}
}
\description{
Makes the primary decision about whether to use parallel or sequential
processing based on comprehensive analysis of problem characteristics,
system resources, and performance estimates.
}
\details{
The decision process considers:
1. User preferences (explicit overrides)
2. Problem size thresholds (minimum viable parallel work)
3. Resource availability (cores, memory, packages)
4. Performance estimates (speedup, efficiency)
5. Platform-specific considerations

Decision thresholds:
- Minimum 8 parameter combinations for parallel consideration
- Matrix size >= 15 for meaningful parallel work
- At least 2 cores available with required packages
- Expected speedup > 1.3x
- Parallel efficiency > 40%
}
\examples{
\dontrun{
# Automatic decision making
decision <- should_use_parallel(
  n_combinations = 50,
  matrix_size = 100,
  n_bootstrap = 30,
  user_preference = "auto",
  verbose = TRUE
)

if (decision$use_parallel) {
  cat("Using", decision$n_cores, "cores for parallel processing\n")
} else {
  cat("Using sequential processing\n")
}

# Force parallel processing
decision_forced <- should_use_parallel(
  n_combinations = 10,
  matrix_size = 20,
  user_preference = "parallel"
)
}

}
\seealso{
\code{\link{detect_system_resources}}, 
\code{\link{estimate_parallel_benefit}},
\code{\link{get_optimal_cores}}
}
